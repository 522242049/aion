<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="modAionImpl">
	<property name="dir.lib" value="../../lib" />
	<property name="dir.dest" value="./build/main" />
	<property name="dir.native" value="./build/native" />
	<property name="dir.test" value="./build/test" />
	<property name="src.test" value="./test" />
	<property name="test.report.dir" value="report" />
	<property name="dir.javaAPIlib" value="../javaAPIlib" />

	<path id="classpath.dependency">
		<pathelement location="${dir.lib}/modAionBase.jar" />
		<!-- pathelement location="${dir.lib}/libnsc.jar" / -->
	</path>

	<path id="classpath.test">
		<pathelement location="${dir.lib}/junit_4/junit-4.12.jar" />
		<pathelement location="${dir.lib}/hamcrest/hamcrest-all-1.3.jar" />
		<pathelement location="${dir.lib}/modAionImpl.jar" />
	</path>

	<target name="clean_build" depends="clean, build" />

	<target name="clean">
		<delete dir="${dir.dest}" includeEmptyDirs="true" includes="**/*/" />
		<delete dir="${dir.test}" includeEmptyDirs="true" includes="**/*/" />
		<delete dir="${test.report.dir}" />
		<delete file="modAionImpl.jar" />
		<delete file="${dir.lib}/modAionImpl.jar" />
	</target>

	<target name="test_build" depends="build">
		<mkdir dir="${dir.test}" />
		<javac debug="on" debuglevel="source,lines,vars" includeantruntime="false" release="9" srcdir="./test" destdir="${dir.test}" includes="**/*Test.java">
			<classpath>
				<path refid="classpath.test" />
				<path refid="classpath.dependency" />
			</classpath>
		</javac>
	</target>

	<target name="test" depends="test_build">
		<mkdir dir="${test.report.dir}" />
		<junit printsummary="on" haltonfailure="no" fork="true">
			<classpath>
				<path refid="classpath.test" />
				<path refid="classpath.dependency" />
				<pathelement location="${dir.test}" />
			</classpath>
			<formatter type="plain" usefile="false" />
			<formatter type="xml" />
			<batchtest todir="${test.report.dir}">
				<fileset dir="${src.test}" includes="**/*Test.java" />
			</batchtest>
		</junit>
	</target>

	<target name="build">
		<mkdir dir="${dir.dest}" />
		<mkdir dir="${dir.native}" />
		<javac debug="true" debuglevel="source,lines,vars" includeantruntime="false" release="9" srcdir="./" destdir="${dir.dest}" includes="src/**/*.java,module-info.java">
			<src path="../../aion_fastvm/java/" />
			<compilerarg line="--add-modules=java.xml.bind -h ${dir.native}"/>
			<modulepath>
				<pathelement location="${dir.lib}/modRlp.jar" />
				<pathelement location="${dir.lib}/modAionBase.jar" />
				<pathelement location="${dir.lib}/modCrypto.jar" />
				<pathelement location="${dir.lib}/modMcf.jar" />
				<pathelement location="${dir.lib}/slf4j-api-1.7.25.jar" />
				<pathelement location="${dir.lib}/modLogger.jar" />
				<pathelement location="${dir.lib}/modP2pImpl.jar" />
				<pathelement location="${dir.lib}/modP2p.jar" />
				<pathelement location="${dir.lib}/modEvtMgr.jar" />
				<pathelement location="${dir.lib}/modEvtMgrImpl.jar" />
				<pathelement location="${dir.lib}/modDbMgr.jar" />
				<pathelement location="${dir.lib}/modAion.jar" />
				<pathelement location="${dir.lib}/modTxPool.jar" />
				<pathelement location="${dir.lib}/libJson.jar" />
				<pathelement location="${dir.lib}/commons-lang3-3.4.jar" />
				<pathelement location="${dir.lib}/commons-collections4-4.0.jar" />
				<pathelement location="${dir.lib}/guava-19.0.jar" />
				<pathelement location="${dir.lib}/libnsc.jar" />
			</modulepath>
		</javac>

		<jar destfile="modAionImpl.jar" filesetmanifest="mergewithoutmain" basedir="${dir.dest}" />
		<move includeemptydirs="false" todir="${dir.lib}">
			<file file="modAionImpl.jar" />
		</move>
	</target>


	<target name="build_v8">
		<mkdir dir="${dir.dest}" />
		<javac debug="true" debuglevel="source,lines,vars" includeantruntime="false" srcdir="./src" destdir="${dir.dest}" includes="**/*.java">
			<classpath>
				<pathelement location="${dir.lib}/libnsc.jar" />
				<pathelement location="${dir.javaAPIlib}/libAionBase.jar" />
			</classpath>
		</javac>

		<jar destfile="libRlp.jar" filesetmanifest="mergewithoutmain" basedir="${dir.dest}" />
		<move includeemptydirs="false" todir="${dir.javaAPIlib}">
			<file file="libRlp.jar" />
		</move>
	</target>

	<target name="clean_build_v8" depends="clean_v8, build_v8" />

	<target name="clean_v8">
		<delete dir="${dir.dest}" includeEmptyDirs="true" includes="**/*/" />
		<delete dir="${dir.test}" includeEmptyDirs="true" includes="**/*/" />
		<delete dir="${test.report.dir}" />
		<delete file="Rlp.jar" />
		<delete file="${dir.javaAPIlib}/libRlp.jar" />
	</target>
</project>
