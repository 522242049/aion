<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="mod-txpool">
	<property name="dir.lib" value="../lib" />
	<property name="dir.mod" value="../mod" />
	<property name="dir.dest" value="./build" />
	<property name="dir.test" value="./build/test"/>
	<property name="dir.integration-test" value="./build/integration_test"/>
	<property name="dir.native" value="./build/native"/>
	<property name="src.test" value="./test"/>
	<property name="src.integration-test" value="./integration_test"/>
	<property name="test.report.dir" value="report"/>
	<property name="integration-test.report.dir" value="integration_report"/>

	<path id="classpath.integration-test">
		<pathelement location="${dir.lib}/junit_4/junit-4.12.jar"/>
		<pathelement location="${dir.lib}/hamcrest/hamcrest-all-1.3.jar"/>
	</path>

	<path id="classpath.test">
		<pathelement location="${dir.lib}/junit_4/junit-4.12.jar"/>
		<pathelement location="${dir.lib}/hamcrest/hamcrest-all-1.3.jar"/>
	</path>

	<path id="classpath.dependency">
		<pathelement location="${dir.mod}/modAionBase.jar"/>
	</path>

	<target name="clean_build" depends="clean">
		<antcall target="build">
			<param name="compile.debug" value="${compile.debug}" />
		</antcall>
	</target>

	<target name="clean">
		<delete dir="bin" includeEmptyDirs="true" includes="**/*/" />
		<delete dir="./build"/>
		<delete file="${dir.mod}/modTxPool.jar" />
	</target>

	<target name="check-integration-dir">
		<condition property="integration_test_exists">
			<available file="${src.integration-test}" type="dir"/>
		</condition>
	</target>

	<target name="check-test-dir">
		<condition property="test_exists">
			<available file="${src.test}" type="dir"/>
		</condition>
	</target>

	<target name="integration_test_build" depends="build, check-integration-dir" if="integration_test_exists">
		<mkdir dir="${dir.integration-test}"/>
		<javac debug="on" debuglevel="source,lines,vars" includeantruntime="false" release="10" srcdir="${src.integration-test}" destdir="${dir.integration-test}" includes="**/*.java">
			<classpath>
				<path refid="classpath.integration-test"/>
				<path refid="classpath.dependency"/>
			</classpath>
		</javac>
	</target>

	<target name="test_build" depends="build, check-test-dir" if="test_exists">
		<mkdir dir="${dir.test}" />
		<javac debug="on" debuglevel="source,lines,vars" includeantruntime="false" release="10" srcdir="${src.test}" destdir="${dir.test}" includes="**/*.java">
			<classpath>
				<path refid="classpath.test"/>
				<path refid="classpath.dependency"/>
			</classpath>
		</javac>
	</target>

	<target name="integration_test" depends="integration_test_build" if="integration_test_exists">
		<mkdir dir="${integration-test.report.dir}" />
		<junit printsummary="yes" haltonfailure="yes" fork="yes">
			<classpath>
				<path refid="classpath.integration-test"/>
				<path refid="classpath.dependency"/>
				<pathelement location="${dir.integration-test}"/>
			</classpath>
			<formatter type="plain" usefile="false"/>
			<formatter type="xml"/>
			<batchtest todir="${integration-test.report.dir}">
				<fileset dir="${src.integration-test}">
					<include name="**/*Test.java"/>
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="test" depends="test_build" if="test_exists">
		<mkdir dir="${test.report.dir}" />
		<junit printsummary="yes" haltonfailure="yes" fork="yes">
			<classpath>
				<path refid="classpath.test"/>
				<path refid="classpath.dependency"/>
				<pathelement location="${dir.test}"/>
			</classpath>
			<formatter type="plain" usefile="false"/>
			<formatter type="xml" />
			<batchtest todir="${test.report.dir}">
				<fileset dir="${src.test}">
					<include name="**/*Test.java"/>
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="ci_build" depends="test_build, integration_test_build"/>

	<target name="build">
		<echo message="compiling with debug=${compile.debug}" />
		<mkdir dir="${dir.dest}" />
		<javac debug="${compile.debug}" debuglevel="source,lines,vars" includeantruntime="false" release="10" srcdir="./" destdir="${dir.dest}" includes="src/**/*.java, module-info.java">
			<modulepath>
				<path refid="classpath.dependency"/>
			</modulepath>
		</javac>

		<jar destfile="modTxPool.jar" filesetmanifest="mergewithoutmain" basedir="${dir.dest}" />
		<move includeemptydirs="false" todir="${dir.mod}">
			<file file="modTxPool.jar" />
		</move>
	</target>
</project>
